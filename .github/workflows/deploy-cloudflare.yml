name: 🚀 Deploy to Cloudflare Pages

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

# Allow one concurrent deployment
concurrency:
  group: "cloudflare-pages-${{ github.ref }}"
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  LOG_LEVEL: 'INFO'
  NEXT_TELEMETRY_DISABLED: '1'
  SKIP_ENV_VALIDATION: 'true'

jobs:
  # Testing job runs first
  test:
    name: 🔍 Quality Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          echo "✅ Dependencies installed successfully"

      - name: Run linting
        run: |
          npm run lint
          echo "✅ Linting passed"

      - name: Type checking
        run: |
          npx tsc --noEmit --skipLibCheck
          echo "✅ Type checking passed"

  # Deployment job
  deploy:
    name: 🚀 Deploy to Cloudflare Pages
    runs-on: ubuntu-latest
    needs: [test]
    if: always() && (needs.test.result == 'success' || github.event_name == 'push')
    permissions:
      contents: read
      deployments: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          echo "📦 Dependencies installed"

      - name: Build application for Cloudflare
        run: |
          echo "🔨 Building application..."
          npm run build:cf
          echo "✅ Build completed successfully"
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
          LOG_LEVEL: INFO

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: open-lovable
          directory: out
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: 📝 Add deployment comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.url }}';
            const comment = `## 🚀 Deployment Preview
            
✅ **Deployment completed successfully!**
            
🔗 **Preview URL**: ${deploymentUrl}
            
### 📊 Build Summary:
            - ✅ Dependencies installed
            - ✅ Build completed
            - ✅ Deployed to Cloudflare Pages
            
### 🎯 Key Features:
            - Structured logging system
            - Debug utilities
            - Production-ready configuration
            
---
            *Generated by GitHub Actions*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: 📣 Deployment notification
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "🎉 Successfully deployed to production!"
          echo "🔗 Production URL: ${{ steps.deploy.outputs.url }}"
          echo "📊 Deployment ID: ${{ steps.deploy.outputs.id }}"